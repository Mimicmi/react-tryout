{"version":3,"sources":["components/ToDo.js","components/ToDoList.js","components/NavBar.js","components/AddTask.js","data.js","components/App.js","index.js"],"names":["ToDo","state","completed","props","task","toggleCompleted","setState","prevState","onToggleCompleted","id","className","this","name","onClick","React","Component","ToDoList","filteredTasks","tasks","match","params","filter","length","Fragment","map","NavBar","onDeleteCompleted","to","exact","AddTask","handleSubmit","event","preventDefault","onAddTask","newTask","value","history","push","onSubmit","htmlFor","type","required","ref","elem","data","App","localStorage","getItem","JSON","parse","newTaskName","uniqid","process","setTimeout","setItem","stringify","taskId","taskToUpdate","find","componentDidMount","console","log","shouldComponentUpdate","componentDidUpdate","componentWillUnmount","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bae8d259.chunk.js","sourcesContent":["import React from 'react';\nimport { FaCheck } from 'react-icons/fa';\n\nclass ToDo extends React.Component {\n  state = {\n    completed: this.props.task.completed\n  }\n  toggleCompleted = () => {\n    this.setState(prevState => ({\n      completed: !prevState.completed\n    }))\n    this.props.onToggleCompleted(this.props.task.id)\n  }\n  render() {\n    return (\n      <li className={\"list-group-item \" + (this.state.completed ? \"bg-success text-white\" : null)}>\n        {this.props.task.name}\n        <button className={\"btn btn-sm btn-outline-success float-end \" + (this.state.completed ? \"btn-outline-light\" : null)} onClick={() => this.toggleCompleted()}><FaCheck /></button>\n      </li >\n    )\n  }\n}\n\nexport default ToDo;","import React from 'react';\nimport Todo from './ToDo';\n\n\nconst ToDoList = ({ tasks, match, onToggleCompleted }) => {\n  let filteredTasks;\n\n  switch (match.params.filter) {\n    case 'completed':\n      filteredTasks = tasks.filter(task => task.completed);\n      break;\n    default:\n      filteredTasks = tasks;\n  }\n  if (filteredTasks.length === 0) {\n    return (\n      <React.Fragment>\n        <h1 className=\"m-3\">My to-do-list app</h1>\n        <li className=\"list-group-item\">No task to display here</li>\n      </React.Fragment >\n    )\n  } else {\n    return (\n      <React.Fragment>\n        <h1 className=\"m-3\">My to-do-list app</h1>\n        <ul className=\"list-group m-3\">\n          {\n            filteredTasks.map((task) => <Todo task={task} key={task.id} onToggleCompleted={onToggleCompleted} />)\n          }\n        </ul>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ToDoList;","import React from 'react';\nimport { FaListAlt, FaCheckSquare, FaPlusSquare, FaTrash } from \"react-icons/fa\";\nimport { NavLink } from 'react-router-dom';\n\nconst NavBar = ({ onDeleteCompleted }) => (\n  <footer className=\"p-3 bg-light\">\n    <div className=\"btn-group\">\n      <NavLink to=\"/\" className=\"btn btn-outline-dark\" exact={true}><FaListAlt /></NavLink>\n      <NavLink to=\"/completed\" className=\"btn btn-outline-dark\"><FaCheckSquare /></NavLink>\n      <NavLink to=\"/add-task\" className=\"btn btn-outline-dark\"><FaPlusSquare /></NavLink>\n    </div>\n    <button className=\"btn btn-sm btn-outline-dark float-end\" onClick={onDeleteCompleted}><FaTrash /></button>\n  </footer>\n)\n\nexport default NavBar;","import React from 'react';\n\nclass AddTask extends React.Component {\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.onAddTask(this.newTask.value)\n    this.props.history.push('/')\n  }\n\n  render() {\n    return (\n      <>\n        <h1 className=\"m-3\">New Task</h1>\n        <div className=\"card m-3\">\n          <form className=\"card m-3\" onSubmit={event => this.handleSubmit(event)}>\n            <div className=\"form-group m-2\">\n              <label htmlFor=\"taskName\">Task Name</label>\n              <input type=\"text\" className=\"form-control\" name=\"taskName\" id=\"taskName\"\n                required ref={elem => this.newTask = elem}></input>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary m-2\">Add Task</button>\n          </form>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default AddTask;","let data = [\n  { id: '123456a', name: 'Wake up', completed: false },\n  { id: '123456b', name: 'Take a coffee', completed: false },\n  { id: '123456c', name: 'Shower', completed: false },\n  { id: '123456d', name: 'Breakfast', completed: false },\n  { id: '123456e', name: 'Start working', completed: false },\n]\nexport default data;","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport ToDoList from \"./ToDoList\";\nimport NavBar from \"./NavBar\";\nimport AddTask from \"./AddTask\";\nimport data from \"../data\";\nimport uniqid from 'uniqid';\n\nclass App extends React.Component {\n  state = {\n    tasks: localStorage.getItem('data') ? JSON.parse(localStorage.getItem('data')) : data\n  }\n  onAddTask = (newTaskName) => {\n    let newTask = {\n      id: uniqid.process(),\n      name: newTaskName,\n      completed: false\n    }\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, newTask]\n\n    }))\n    setTimeout(() => {\n      localStorage.setItem('data', JSON.stringify(this.state.tasks))\n    }, 500)\n  }\n  onToggleCompleted = (taskId) => {\n    let taskToUpdate = this.state.tasks.find(task => task.id === taskId)\n    taskToUpdate.completed = !taskToUpdate.completed\n    this.setState(prevState => (\n      prevState.tasks.map(task => {\n        return task.id === taskId ? taskToUpdate : task\n      })\n    ))\n    localStorage.setItem('data', JSON.stringify(this.state.tasks));\n  }\n  onDeleteCompleted = () => {\n    this.setState(prevState => {\n      let newState = prevState.tasks.filter(task => !task.completed)\n      return {\n        tasks: newState\n      }\n    })\n    setTimeout(() => {\n      localStorage.setItem('data', JSON.stringify(this.state.tasks))\n    }, 500)\n  }\n\n  componentDidMount = () => {\n    console.log('ComponentDidMount')\n    return true\n  }\n\n  shouldComponentUpdate = () => {\n    console.log('shouldComponentUpdate')\n    return true\n  }\n\n  componentDidUpdate = () => {\n    console.log('componentDidUpdate')\n    return true\n  }\n\n  componentWillUnmount = () => {\n    console.log('componentWillUnmount')\n    return true\n  }\n\n\n  render() {\n    return (\n      <section>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/add-task\" render={(props) => <AddTask {...props} onAddTask={this.onAddTask} />} />\n            <Route path=\"/:filter?\" render={(props) => <ToDoList {...props} tasks={this.state.tasks} onToggleCompleted={this.onToggleCompleted} />} />\n            <Route path=\"/\" component={ToDoList} />\n          </Switch>\n          <NavBar onDeleteCompleted={this.onDeleteCompleted} />\n        </BrowserRouter>\n      </section>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App';\nimport './custom.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}